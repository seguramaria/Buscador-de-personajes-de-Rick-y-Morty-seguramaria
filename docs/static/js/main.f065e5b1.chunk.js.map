{"version":3,"sources":["images/einstein.svg","images/monster.svg","images/unknown.svg","images/no-morty.gif","images/rickmortyanimation.gif","images/title.png","images/wallpaper-stars-2.png","images/rick-not-found.gif","services/getDataFromApi.js","components/Filters/FilterByName.js","components/Filters/FilterBySpecies.js","components/Filters/Filters.js","components/Characters/CharacterCard.js","components/Characters/NoCharacter.js","components/Characters/CharacterList.js","components/Characters/CharacterDetail.js","components/Landing.js","components/Header.js","components/PageNotFound.js","components/App.js","index.js"],"names":["module","exports","getDataFromApi","fetch","then","response","json","data","results","map","character","id","name","status","species","origin","episodes","episode","length","gender","image","FilterByName","props","className","htmlFor","placeholder","type","value","nameFilter","onChange","ev","handleFilter","target","key","FilterBySpecies","speciesFilter","Filters","onSubmit","preventDefault","CharacterCard","getSpecies","HumanIcon","AlienIcon","UnknownIcon","console","log","to","src","alt","clasName","NoCharacter","ImageNotFound","CharacterList","charactersElements","characters","CharacterDetail","onClick","ImageHome","Landing","ImageTitle","Header","App","useState","setCharacters","setNameFilter","setSpeciesFilter","useEffect","sort","a","b","filteredCharacters","filter","toUpperCase","includes","exact","path","render","routeCharacterId","parseInt","match","params","find","PageNotFound","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f065e5b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/einstein.04691b45.svg\";","module.exports = __webpack_public_path__ + \"static/media/monster.0bed64db.svg\";","module.exports = __webpack_public_path__ + \"static/media/unknown.3769c6b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-morty.1af6fa9b.gif\";","module.exports = __webpack_public_path__ + \"static/media/rickmortyanimation.7df79bcd.gif\";","module.exports = __webpack_public_path__ + \"static/media/title.ca355fba.png\";","module.exports = __webpack_public_path__ + \"static/media/wallpaper-stars-2.5656a47e.png\";","module.exports = __webpack_public_path__ + \"static/media/rick-not-found.e47c7416.gif\";","const getDataFromApi = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      //Filtramos el objeto para conseguir la propiedad de los personajes\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          status: character.status,\r\n          species: character.species,\r\n          origin: character.origin.name,\r\n          episodes: character.episode.length,\r\n          gender: character.gender,\r\n          image: character.image,\r\n        };\r\n      }); //Retornamos los datos con los que vamos a trabajar. Filtraremos aquí directamente los datos si hay un NULL hacer un ternario IMPORTANTE!!!!!!!\r\n    });\r\n};\r\nexport default getDataFromApi;\r\n","import React from 'react';\r\nimport '../../stylesheets/Filters.scss';\r\n\r\n// En props va a recibir la función de su abuela (app.js) que se la ha pasado su madre por props (filters.js)\r\nconst FilterByName = (props) => {\r\n  //Vamos a pasar por lifting la información que escribimos en los inputs hacia arriba. Desde filterbyname hasta app\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      //lo pasamos como un objeto de datos. En un solo objeto enviamos información relativa a lo que ha sucedido. LLIFTING: Guardamos los datos desde FilterByName hasta App.\r\n      value: ev.target.value,\r\n      key: 'nameFilter',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"label-name\" htmlFor=\"name\">\r\n        Filtrar por nombre:\r\n      </label>\r\n      <input\r\n        placeholder=\"Ej: Morty\"\r\n        className=\"input-name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        value={props.nameFilter}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import React from 'react';\r\nimport '../../stylesheets/Filters.scss';\r\n\r\nconst FilterBySpecies = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      key: 'species',\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"species\" className=\"label-species \">\r\n        Filtrar por especie\r\n      </label>\r\n      <select\r\n        id=\"species\"\r\n        name=\"species\"\r\n        className=\"select-species\"\r\n        value={props.speciesFilter}\r\n        onChange={handleChange}\r\n      >\r\n        <option value=\"all\">Todos</option>\r\n        <option value=\"Alien\">Alienígena</option>\r\n        <option value=\"Human\">Humano</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterBySpecies;\r\n","import React from 'react';\r\nimport FilterByName from './FilterByName';\r\nimport FilterBySpecies from './FilterBySpecies';\r\nimport '../../stylesheets/Filters.scss';\r\n\r\n//Vamos a puentear la función que recibe por arriba (de app) y pasarla por props hacia abajo (filterbyname)\r\n\r\nconst Filters = (props) => {\r\n  const preventEvent = (ev) => {\r\n    ev.preventDefault(ev);\r\n  };\r\n  return (\r\n    <section>\r\n      <form className=\"form\" onSubmit={preventEvent}>\r\n        <FilterByName\r\n          handleFilter={props.handleFilter}\r\n          nameFilter={props.nameFilter}\r\n        />\r\n        <FilterBySpecies\r\n          handleFilter={props.handleFilter}\r\n          speciesFilter={props.speciesFilter}\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../stylesheets/Characters.scss';\r\nimport HumanIcon from '../../images/einstein.svg';\r\nimport AlienIcon from '../../images/monster.svg';\r\nimport UnknownIcon from '../../images/unknown.svg';\r\n\r\nconst CharacterCard = (props) => {\r\n  //voy a cambiar el resultado de la especie poniendo un icono con un condicional:\r\n  const getSpecies = () => {\r\n    if (props.species === 'Human') {\r\n      return HumanIcon;\r\n    } else if (props.species === 'Alien') {\r\n      return AlienIcon;\r\n    } else {\r\n      return UnknownIcon;\r\n    }\r\n  };\r\n  console.log(getSpecies());\r\n  return (\r\n    <Link to={`/character/${props.id}`} className=\"charactercard\">\r\n      <li className=\"charactercard\" id={props.id}>\r\n        <div className=\"charactercard__img-container\">\r\n          <img\r\n            className=\"charactercard__img\"\r\n            src={props.image}\r\n            alt={`Foto de ${props.name}`}\r\n          />\r\n        </div>\r\n        <div className=\"charactercard__description\">\r\n          <h4 className=\"charactercard__title\">{props.name}</h4>\r\n          <div className=\"charactercard__icon-container\">\r\n            <img\r\n              clasName=\"charactercard__icon\"\r\n              src={getSpecies()}\r\n              alt=\"Especie\"\r\n            ></img>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from 'react';\r\nimport '../../stylesheets/Characters.scss';\r\nimport ImageNotFound from '../../images/no-morty.gif';\r\n\r\nconst NoCharacter = (props) => {\r\n  return (\r\n    <section className=\"no-character\">\r\n      <p>El nombre \"{props.nameFilter}\"\" no coincide con ningún personaje</p>\r\n      <img src={ImageNotFound} alt=\"No se ha encontrado el personaje\"></img>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NoCharacter;\r\n","import React from 'react';\r\n\r\nimport CharacterCard from './CharacterCard';\r\nimport NoCharacter from './NoCharacter';\r\nimport '../../stylesheets/Characters.scss';\r\n\r\nconst CharacterList = (props) => {\r\n  // console.log(props);\r\n  //Al haber pasado los datos por props al componente en app.js, aquí los recibimos\r\n  const charactersElements = props.characters.map((character) => {\r\n    //Siempre que recorramos para pintar, debemos usar map\r\n    //Vamos a pintar los lis, pero necesitamos una key, podemos usar el index o los IDs. Si tenemos id, siempre mejor id.\r\n    return (\r\n      <CharacterCard\r\n        key={character.id}\r\n        id={character.id}\r\n        name={character.name}\r\n        image={character.image}\r\n        species={character.species}\r\n        status={character.status}\r\n      />\r\n    ); //vamos a pasar las props para que cada personaje tenga sus datos\r\n  });\r\n\r\n  //Si el array de charactersElements es igual a cero, significa que el nombre introducido en el buscador no es correcto, por lo que añadimos este condicional que mostrará un error.\r\n  if (charactersElements.length === 0)\r\n    return <NoCharacter nameFilter={props.nameFilter} />;\r\n\r\n  return (\r\n    <ul className=\"characterlist\">\r\n      {charactersElements}\r\n      {/* //pintamos el array recorrido */}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../stylesheets/Characters.scss';\r\nimport ImageHome from '../../images/rickmortyanimation.gif';\r\nconst CharacterDetail = (props) => {\r\n  const handleModalContentClick = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  //como viene en inglés y el público de nuestra página es español, vamos a traducirlo con un condicional:\r\n  const getStatus = () => {\r\n    if (props.status === 'Alive') {\r\n      return 'Vivo';\r\n    } else if (props.status === 'Dead') {\r\n      return 'Muerto';\r\n    } else {\r\n      return 'Desconocido';\r\n    }\r\n  };\r\n  const getSpecies = () => {\r\n    if (props.species === 'Human') {\r\n      return 'Humano';\r\n    } else if (props.species === 'Alien') {\r\n      return 'Alienígena';\r\n    }\r\n  };\r\n  const getGender = () => {\r\n    if (props.gender === 'Female') {\r\n      return 'Femenino';\r\n    } else if (props.gender === 'Male') {\r\n      return 'Masculino';\r\n    } else {\r\n      return 'Desconocido';\r\n    }\r\n  };\r\n\r\n  const getOrigin = () => {\r\n    if (props.origin === 'unknown') {\r\n      return 'Desconocido';\r\n    } else {\r\n      return props.origin;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link to=\"/App\" className=\"modal__link\">\r\n      <div className=\"modal\">\r\n        <div className=\"modal__dialog\">\r\n          {/* todo el contenido del modal tiene un prevent default que hace que no se dirija a la home al clicar */}\r\n          <div className=\"modal__content\" onClick={handleModalContentClick}>\r\n            <header className=\"modal__header\">\r\n              <div className=\"modal__img-container\">\r\n                <img\r\n                  className=\"modal__img\"\r\n                  src={props.image}\r\n                  alt=\"Imagen de {props.name}\"\r\n                />\r\n              </div>\r\n              <h2 className=\"modal__title\">{props.name}</h2>\r\n            </header>\r\n\r\n            <ul className=\"modal__ul\">\r\n              <li className=\"modal__ul-li\">\r\n                <span className=\"modal__ul-li-span-1\"> Especie:</span>\r\n                <span className=\"modal__ul-li-span-2\"> {getSpecies()}</span>\r\n              </li>\r\n              <li className=\"modal__ul-li\">\r\n                <span className=\"modal__ul-li-span-1\"> Origen: </span>\r\n                <span className=\"modal__ul-li-span-2\"> {getOrigin()}</span>\r\n              </li>\r\n              <li className=\"modal__ul-li\">\r\n                <span className=\"modal__ul-li-span-1\"> Estado:</span>\r\n                <span className=\"modal__ul-li-span-2\"> {getStatus()}</span>\r\n              </li>\r\n              <li className=\"modal__ul-li\">\r\n                <span className=\"modal__ul-li-span-1\"> Género:</span>\r\n                <span className=\"modal__ul-li-span-2\"> {getGender()}</span>\r\n              </li>\r\n              <li className=\"modal__ul-li\">\r\n                <span className=\"modal__ul-li-span-1\">\r\n                  Número de episodios:\r\n                </span>\r\n                <span className=\"modal__ul-li-span-2\"> {props.episodes}</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <Link to=\"/App\" className=\"modal__close\">\r\n            <div className=\"modal__close-img-container\">\r\n              <img\r\n                src={ImageHome}\r\n                className=\"modal__close-img\"\r\n                alt=\"volver a la página principal\"\r\n              ></img>\r\n            </div>\r\n            <p className=\"modal__close-p\">Vuelve a inicio</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheets/Landing.scss';\r\nimport ImageTitle from '../images/title.png';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <section className=\"landing\">\r\n      <header className=\"landing__header\">\r\n        <div className=\"landing__title\">\r\n          <img\r\n            className=\"landing__title-img\"\r\n            src={ImageTitle}\r\n            alt=\"Rick y Morty\"\r\n          ></img>\r\n        </div>\r\n        <p className=\"landing__p\">Buscador de personajes</p>\r\n        <Link to=\"/App\" className=\"landing__btn\">\r\n          Wubba Lubba Dub Dub!!\r\n        </Link>\r\n      </header>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport '../stylesheets/Header.scss';\r\nimport ImageTitle from '../images/wallpaper-stars-2.png';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"header__title\">\r\n          <img\r\n            className=\"header__title-img\"\r\n            src={ImageTitle}\r\n            alt=\"Rick y Morty\"\r\n          ></img>\r\n        </div>\r\n        <div className=\"header__title-container\">\r\n          <h2 className=\"header__title-container-h2\">Rick y Morty</h2>\r\n          <p className=\"header__title-container-p\">\r\n            ¡Busca tu personaje favorito!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../stylesheets/App.scss';\r\nimport ImageNotFound from '../images/rick-not-found.gif';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NoCharacter = () => {\r\n  return (\r\n    <>\r\n      <section className=\"no-character\">\r\n        <p>Página no encontrada</p>\r\n        <img src={ImageNotFound} alt=\"No se ha encontrado el personaje\"></img>\r\n      </section>\r\n      <Link to=\"/App\" className=\"not-found__link\"></Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoCharacter;\r\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport '../stylesheets/App.scss';\nimport getDataFromApi from '../services/getDataFromApi';\nimport Filters from '../components/Filters/Filters';\nimport CharacterList from '../components/Characters/CharacterList';\nimport CharacterDetail from './Characters/CharacterDetail';\nimport Landing from './Landing';\nimport Header from './Header';\nimport PageNotFound from './PageNotFound';\n\nconst App = () => {\n  // React nos pide que en el primer nivel de componenge creemos un Hook. Pobemos el valor inicial del estado Characters dentro de useState, que será mi array de elementos y setCharacters será nuestra función para actualizar el estado. Resultado: Al arrancar la aplicación, products va a ser un array.\n  const [characters, setCharacters] = useState([]);\n  const [nameFilter, setNameFilter] = useState(''); //Esto nos actualizará el estado del filtro de NAME, en un inicio su estado será un sting vacío, ya que al arrancar no hay ningún filtro\n  const [speciesFilter, setSpeciesFilter] = useState('all');\n\n  //MONTAJE\n  // Las tareas que queremos que se ejecuten una sola vez, las tenemos que hacer en un useEffect. PONEMOS EL SEGUNDO PARÁMTRO DE ESTA FUNCIÓN AL FINAL, PARA QUE NO HAYA UN BUCLE INFINITO. En ese array ponemos las dependencias por las cuales useEffect se tiene que volver a ejecutar\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      setCharacters(data);\n    });\n  }, []);\n\n  // <---EVENT HANDLERS--->\n  //En el padre ponemos siempre las funciones\n  //PASAMOS EL MANEJADOR HACIA ABAJO, EN EL RETURN, LO PASAMOS POR PROPS.\n  const handleFilter = (data) => {\n    //Condicional que indica el filtro que va a actualizar su estado\n    if (data.key === 'nameFilter') {\n      setNameFilter(data.value);\n    } else if (data.key === 'species') {\n      setSpeciesFilter(data.value);\n    }\n  };\n\n  // Organizar los personajes por orden alfabético\n  characters.sort(function (a, b) {\n    if (a.name < b.name) return -1;\n    if (a.name > b.name) return 1;\n    return 0;\n  });\n\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name.toUpperCase().includes(nameFilter.toUpperCase());\n    })\n    .filter((character) => {\n      // console.log(character.species);\n      if (speciesFilter === 'all') {\n        return true;\n      } else {\n        return character.species === speciesFilter;\n      }\n    });\n\n  // Tenemos que comparar el nombre del personaje con lo que hayamos escrito en nameFIlter y devolvemos un booleano que nos indica si el personaje en cuestión pasa o no pasa el filtro. Si yo le digo que todos los personajes pasan el filtro (true), me va a pintar los 20 personajes. Si le ponemos false, ningún personaje. Por lo que debemos decirle si es true o false con los filtros. //Usamos un método filter, primer parámetro el personaje(elemenos del array vharacter) que nos devuelve un booleano. Cuanso nameFIlter esté vacío nos devuelve true y aparecen todos los de la lista porque javascript entiende que no texto es texto.\n  //Importante!! Usamos el método toUpperCase para que nos busque escribamos el nombre en mayúsculas o minúsculas.\n\n  //Vamos a concatenar filtros porque queremos que se aniden los filtros, porque queremos buscar por nombre y además buscar por especies, pro lo que tenemos que concatenarlos //Para concatenar, hacemos un filter al final, puesto que el filter anterior nos devuelve un nuevo array y por lo tanto, podemos realizarle un nuevo filter a dicho array.\n  //En este caso tenemos que filtrar es alien, humano o desocnocido, o, pero lo que tenemos en el estado es: \"male\" o \"female\". Por lo que ya no puede ser un includes, tiene que ser un ===, porque vamos a comparar campos extactos. Además, \"female\" incluye la palabra \"male\" por lo que puede darnos problemas.\n  // if (speciesFilter === 'all') {\n  //   return true;\n  // } else {\n  //   return character.species === speciesFilter;\n  // }\n\n  //Render: código que devuelve código html/jsx.\n  const renderCharacterDetail = (props) => {\n    //pasamos datos por aquí y recibimos la información que puede sernos útil. History: relativo al historico de páginas que hemos visitado. Location: relativo a la información que tenemos ahora mismo. match: cómo coincide la información que hemos puesto en   <Route path=\"/character/:id\", nos dice que es exacto, Los params es un id con su valor. (Porque hemos puesto que se llame id, si pusiera otra cosa pondría otra cosa. Por eso ponemos dos puntos, para que sepa que es un dato variable). Ejemplo: id-1, id-2, etc.\n    const routeCharacterId = parseInt(props.match.params.id);\n    // buscamos el id- Vamos a hacer un find sobre nuestro array de datos\n    const character = characters.find(\n      (character) => character.id === routeCharacterId\n    );\n    if (character) {\n      return (\n        <CharacterDetail\n          name={character.name}\n          image={character.image}\n          species={character.species}\n          gender={character.gender}\n          origin={character.origin}\n          status={character.status}\n          episodes={character.episodes}\n        />\n      );\n    } else {\n      return <PageNotFound />;\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Landing />\n        </Route>\n        {/* la lista de personajes está en una ruta exacta, por lo que cuando nos pasamos a la ruta variable de los personajes, desaparece el fondo, es decir, CharacterList no aparece en esa parte. Al igual que si no queremos que se vean los filtros */}\n        <Route exact path=\"/App\">\n          <Header />\n          <Filters\n            handleFilter={handleFilter}\n            nameFilter={nameFilter}\n            speciesFilter={speciesFilter}\n          />\n\n          {/* enviamos el estado nameFilterpor props para que si quiero poner por defecto un estado concreto, se pase por props hasta filtersByname donde asignaremos un value para siempre a sus inputs en el que le diremos que ese value siempre será nameFilter */}\n          <main className=\"main\">\n            <CharacterList\n              characters={filteredCharacters}\n              nameFilter={nameFilter}\n            />\n          </main>\n          {/* <Footer className=\"footer\" /> */}\n        </Route>\n\n        {/* //Pasamos los datos por props */}\n        <Route path=\"/character/:id\" render={renderCharacterDetail} />\n        {/* componente route donde le indicamos cómo debe comportarse. Le tenemos\n          que indicar que todo lo que sea character barra algo, lo tiene que gestionar con el render y con ese método. Los dos puntos es porque es una variable. */}\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}